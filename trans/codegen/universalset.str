module codegen/universalset

imports
  signatures/java/types/-
  signatures/java/classes/-
  signatures/java/expressions/-
  signatures/java/literals/-
  signatures/java/lexical/-
  signatures/java/names/-
  signatures/java/interfaces/-
  signatures/java/statements/-
  signatures/java/packages/-

rules
  universalset-type-name = !"UniversalSet"
  universalset-type-id = !Id(<universalset-type-name>)
  universalset-type = !ClassType(<universalset-type-id>, None())
  
  universalset-class: _ -> [
	  java:type-dec |[
		public final class UniversalSet implements Set {
			@Override
			public int size() {
				return Integer.MAX_VALUE;
			}
		
			@Override
			public boolean isEmpty() {
				return false;
			}
		
			@Override
			public boolean contains(Object o) {
				return true;
			}
		
			@Override
			public Iterator iterator() {
				throw new UnsupportedOperationException();
			}
		
			@Override
			public Object[] toArray() {
				throw new UnsupportedOperationException();
			}
		
			@Override
			public boolean add(Object o) {
				return false;
			}
		
			@Override
			public boolean remove(Object o) {
				return false;
			}
		
			@Override
			public boolean addAll(Collection c) {
				return false;
			}
		
			@Override
			public void clear() {
			}
		
			@Override
			public boolean removeAll(Collection c) {
				return false;
			}
		
			@Override
			public boolean retainAll(Collection c) {
				return false;
			}
		
			@Override
			public boolean containsAll(Collection c) {
				return false;
			}
		
			@Override
			public Object[] toArray(Object[] a) {
				throw new UnsupportedOperationException();
			}
		
			@Override
			public boolean equals(Object obj) {
				return obj instanceof UniversalSet;
			}
		
			@Override
			public int hashCode() {
				return getClass().hashCode();
			}
		 }
	  ]|
	]
