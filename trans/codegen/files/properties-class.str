module codegen/properties-class

imports

  codegen/-

  signatures/flock/-
  signatures/flock/desugar/-
  signatures/java/types/-
  signatures/java/classes/-
  signatures/java/expressions/-
  signatures/java/literals/-
  signatures/java/lexical/-
  signatures/java/names/-
  signatures/java/interfaces/-
  signatures/java/statements/-
  signatures/java/packages/-

strategies

  module-to-props-java: Module(name, _, r) -> java:compilation-unit |[
    package org.spoofax;
    ~import-dec*:imports
    public class FlowAnalysisProperties {
      ~*inners
    }
  ]|
  with 
    imports := <all-imports>
  ; inners := <retain-all(type-to-class)> r 
  
  type-to-class: TypeDefParams(name, _, None(), _) -> java:classb-dec |[
    static class ~name extends FlockValue {
	  public IStrategoTerm value;
      
	  ~name(IStrategoTerm value) {
	    this.value = value;
	  }
	  
	  @Override
	  public void setValue(Object value) {
	  	this.value = (IStrategoTerm) value;
	  }
	  
	  @Override
	  public IStrategoTerm toTerm() {
		return this.value;
	  }
	
	  @Override
	  public String toString() {
		String pre = ~a + this.value.toString() + ~b;
		StringBuilder sb = new StringBuilder();
		String post = ~c;
		return pre + sb.toString() + post;
	  }
	
	  @Override
	  public boolean equals(Object obj) {
		if (!(obj instanceof ~name)) {
		  return false;
		}
		~name other = (~name) obj;
				
		return this.value.equals(other.value);
	  }
	
	  @Override
	  public int hashCode() {
		return value.hashCode();
	  }
    }
  ]|
  where 
    a := <to-string-literal> "Value(\\\""
  ; b := <to-string-literal> "\\\", {"
  ; c := <to-string-literal> "})"
  
       